"""
Chef has a string S consisting of lowercase English characters. Chef defined functions left shift L(X) and right shift R(X) as follows.

L(X) is defined as shifting all characters of string XX one step towards left and moving the first character to the end.
R(X) is defined as shifting all characters of string XX one step towards the right and moving the last character to the beginning.
For example, L("abcd") = "bcda" and R("abcd") = "dabc"

Chef wants to find out whether there exists a string VV of the same length as SS such that both L(V) = SL(V)=S and R(V) = SR(V)=S holds.

###Input:

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a string SS.
###Output: For each test case, If there exists a valid string VV, print "YES", otherwise print "NO" (without the quotes).



"""
"""
1) take input string into split letters
2) for left side replace first letter with last letter
3) and for right side replace last letter with first letter 
4) when the result of left side and rigt side are same then print yes.
5) otherwise no

"""
T = int(input())
for t in range(T):

    s = input()
    l = len(s)
    left_side_shift = s[1:] + s[0]
    right_side_shift = s[-1] + s[: l - 1]
    if left_side_shift == right_side_shift:
        print("YES")
    else:
        print("NO")
